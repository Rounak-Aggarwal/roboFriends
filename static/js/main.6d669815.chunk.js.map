{"version":3,"sources":["components/Card.js","components/CardList.js","components/Scroll.js","components/SearchBox.js","components/ErrorBoundary.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","name","email","id","className","src","width","height","alt","CardList","robots","map","user","i","Scroll","props","style","overflowY","border","children","SearchBox","searchChange","type","placeholder","onChange","ErrorBoundary","state","hasError","error","info","this","setState","Component","App","onSearchChange","event","searchfield","target","value","fetch","then","response","json","users","filteredRobots","filter","robot","toLowerCase","includes","length","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2OAkBeA,EAfF,SAAC,GAAoB,IAAnBC,EAAkB,EAAlBA,KAAKC,EAAa,EAAbA,MAAMC,EAAO,EAAPA,GAEtB,OACE,sBAAKC,UAAY,sDAAjB,UACI,qBAAKC,IAAG,+BAA0BF,GAAMG,MAAM,MAAMC,OAAO,MAAMC,IAAI,UACrE,gCAGI,6BAAKP,IACL,4BAAIC,WCgBHO,EAzBE,SAAC,GAAa,IAAZC,EAAW,EAAXA,OASf,OACI,8BAEKA,EAAOC,KAAI,SAACC,EAAKC,GACf,OACG,cAAC,EAAD,CACAV,GAAIO,EAAOG,GAAGV,GACdF,KAAMS,EAAOG,GAAGZ,KAChBC,MAAOQ,EAAOG,GAAGX,OAHNQ,EAAOG,GAAGV,UCPxBW,EARA,SAACC,GACZ,OACI,qBAAKC,MAAO,CAAEC,UAAW,SAAUC,OAAQ,kBAAmBX,OAAQ,SAAtE,SACKQ,EAAMI,YCSJC,EAZG,SAAC,GAAoB,IAAnBC,EAAkB,EAAlBA,aAChB,OACI,qBAAKjB,UAAU,MAAf,SACI,uBAAOA,UAAU,mCACjBkB,KAAO,SACPC,YAAY,gBACZC,SAAUH,OCePI,E,kDApBX,aAAc,IAAD,8BACT,gBACKC,MAAQ,CACTC,UAAU,GAHL,E,qDAQb,SAAkBC,EAAOC,GACrBC,KAAKC,SAAS,CAACJ,UAAS,M,oBAG5B,WACI,OAAGG,KAAKJ,MAAMC,SACH,2DAEJG,KAAKf,MAAMI,a,GAjBEa,aC6DbC,G,wDAtDX,aAAc,IAAD,8BACT,gBAaJC,eAAiB,SAACC,GACd,EAAKJ,SAAS,CAACK,YAAcD,EAAME,OAAOC,SAb1C,EAAKZ,MAAQ,CACThB,OAAQ,GACR0B,YAAa,IAJR,E,qDAQb,WAAoB,IAAD,OACfG,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKZ,SAAS,CAACrB,OAAQiC,S,oBAO1C,WAAS,IAAD,EAC4Bb,KAAKJ,MAA7BhB,EADJ,EACIA,OAAQ0B,EADZ,EACYA,YACVQ,EAAiBlC,EAAOmC,QAAO,SAAAC,GACrC,OAAOA,EAAM7C,KAAK8C,cAAcC,SAASZ,EAAYW,kBAGrD,OAAQrC,EAAOuC,OAEP,sBAAK7C,UAAU,KAAf,UACI,oBAAIA,UAAU,KAAd,yBACA,cAAC,EAAD,CAAWiB,aAAcS,KAAKI,iBAC9B,cAAC,EAAD,UACG,cAAC,EAAD,UACE,cAAC,EAAD,CAAUxB,OAAUkC,WAN9B,oBAAIxC,UAAU,KAAd,yB,GA1BG4B,cCIHkB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCMdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.6d669815.chunk.js","sourcesContent":["import React from 'react';\r\n// import Component from 'react';\r\n\r\nconst Card = ({name,email,id}) =>{    //Or I can also pass props in paranthesis      .{} does destructuring. Read more about it\r\n    // const {name,email,id} = props;\r\n    return(\r\n      <div className = 'tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-S'>\r\n          <img src={`https://robohash.org/${id}`} width='220' height='220' alt='Robot'/>\r\n          <div>\r\n              {/* <h2>{props.name}</h2>\r\n              <p>{props.email}</p> */}\r\n              <h2>{name}</h2>\r\n              <p>{email}</p>\r\n          </div>\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card'\r\n\r\nconst CardList = ({robots}) =>{\r\n    // const cardsArray = robots.map((user,i)=>{\r\n    //     return(\r\n    //          <Card key={robots[i].id} \r\n    //          id={robots[i].id} \r\n    //          name={robots[i].name} \r\n    //          email={robots[i].email} />\r\n    //     );\r\n    // });\r\n    return(\r\n        <div>\r\n            {\r\n             robots.map((user,i)=>{\r\n               return(\r\n                  <Card key={robots[i].id} \r\n                  id={robots[i].id} \r\n                  name={robots[i].name} \r\n                  email={robots[i].email} />\r\n                );\r\n             })\r\n           }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CardList;","import React from 'react';\r\n\r\nconst Scroll = (props) => {         //To add styles in div I can create a new file .css or I can do it inine also using {{}}, the outer brackets are for js and nner for object\r\n    return(\r\n        <div style={{ overflowY: 'scroll', border: '5px solid black', height: '700px'}}>                    \r\n            {props.children}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Scroll;","import React from 'react';\r\n\r\nconst SearchBox = ({searchChange}) => {\r\n    return(\r\n        <div className='pd2'>\r\n            <input className='pa3 ba b--green bg-lightest-blue'\r\n            type = 'search' \r\n            placeholder='search robots'\r\n            onChange={searchChange}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SearchBox;","import {Component} from 'react';\r\n\r\nclass ErrorBoundary extends Component {\r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            hasError: false\r\n        }\r\n    }\r\n    \r\n    //New Lifecycle method with react16 just like try catch\r\n    componentDidCatch(error, info){\r\n        this.setState({hasError:true})\r\n    }\r\n\r\n    render(){\r\n        if(this.state.hasError){\r\n            return <h1>Ooooops. That is not good</h1>\r\n        }\r\n        return this.props.children;\r\n    }\r\n}\r\n\r\nexport default ErrorBoundary;","import {Component} from 'react';\r\nimport React from 'react';\r\nimport CardList from '../components/CardList';\r\nimport Scroll from '../components/Scroll';\r\nimport SearchBox from '../components/SearchBox';\r\nimport ErrorBoundary from '../components/ErrorBoundary';\r\nimport './App.css'\r\n\r\nclass App extends Component {\r\n    constructor(){\r\n        super()\r\n        this.state = {\r\n            robots: [],                //these two are our states and this state is what describes our app and it is something that can change and affect our app. And they live in the parent component,the component that is the parent just kind of passes the state to diff. components And now I can access robots not from ere, but from 'this.state.robots'. Now cardlist accepts robots as prop though it is a state in App Because App now owns 'state' that includes 'robots' . It ios allowed to change it\r\n            searchfield: ''\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        fetch('https://jsonplaceholder.typicode.com/users')\r\n        .then(response => response.json())\r\n        .then(users => this.setState({robots: users}));   \r\n    }\r\n\r\n    onSearchChange = (event) => {\r\n        this.setState({searchfield : event.target.value})\r\n    }\r\n\r\n    render(){\r\n        const { robots, searchfield } = this.state;\r\n        const filteredRobots = robots.filter(robot=>{\r\n        return robot.name.toLowerCase().includes(searchfield.toLowerCase())\r\n        })\r\n\r\n        return !robots.length ?\r\n               <h1 className='tc'>Loading</h1> :\r\n            (   <div className='tc'>\r\n                    <h1 className='f1'>RoboFriends</h1>\r\n                    <SearchBox searchChange={this.onSearchChange}/>\r\n                    <Scroll>\r\n                       <ErrorBoundary>\r\n                         <CardList robots = {filteredRobots} />\r\n                       </ErrorBoundary>\r\n                    </Scroll>\r\n                </div>\r\n        \r\n            );\r\n   \r\n\r\n    }\r\n    \r\n}\r\n\r\n// const App = () => {\r\n//     return(\r\n//         <div className='tc'>\r\n//             <h1>RoboFriends</h1>\r\n//             <SearchBox />\r\n//             <CardList robots = {robots} />\r\n//         </div>\r\n\r\n//     );\r\n// }\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n// import Card from './Card';\n// import CardList from './CardList';\nimport App from './containers/App';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n// import {robots} from './robot';    //We are using destructuring here: ({....}) --allows us to grab the props object and its properties.\n\n//CardList is accepting a robots prop\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App/>                            \n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}